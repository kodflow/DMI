name: Build images

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:

  os:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          os_name:
            - alpine
            - ubuntu
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
       fetch-depth: 0
    - name: Dockerfile Change
      id: sign
      run: make change src/os/${{ matrix.os_name }}/dockerfile
    - name: Login to Docker Hub
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/setup-buildx-action@v2
    - name: Build Image
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        file: src/os/${{ matrix.os_name }}/dockerfile
        context: src/os/${{ matrix.os_name }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          kodmain/os:${{ matrix.os_name }}
          kodmain/os:${{ matrix.os_name }}

  builder:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          builder_name:
            - all
            - c
            - go
            - java
            - nodejs
            - php
            - python
            - ruby
            - rust
            - perl
    needs: os
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Dockerfile Change
      id: sign
      run: make change ${{ matrix.builder_name }}
    - name: Login to Docker Hub
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/setup-buildx-action@v2
    - name: Build Image
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        file: ${{ matrix.builder_name }}
        context: src/builder/${{ matrix.builder_name }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          kodmain/builder:${{ matrix.builder_name }}
          kodmain/builder:${{ matrix.builder_name }}

  service:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          service_name:
            - wireguard
    needs: builder
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Dockerfile Change
      id: sign
      run: make change ${{ matrix.service_name }}
    - name: Login to Docker Hub
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/setup-buildx-action@v2
    - name: Build Image
      if: ${{ github.event_name != 'push' || steps.sign.outputs.changed == 'true' }}
      uses: docker/build-push-action@v4
      with:
        file: src/service/${{ matrix.service_name }}/dockerfile
        context: src/service/${{ matrix.service_name }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          kodmain/service:${{ matrix.service_name }}
          kodmain/service:${{ matrix.service_name }}